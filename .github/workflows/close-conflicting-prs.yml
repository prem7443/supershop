name: Close PRs with Merge Conflicts

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check_merge_conflicts:
    runs-on: ubuntu-latest

    steps:
      - name: Check if PR has merge conflicts
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;

            if (!pr) {
              throw new Error("‚ùå No pull request data in context. This workflow must be triggered by a 'pull_request' event.");
            }

            const { data: initialPR } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
            });

            let attempts = 0;
            let mergeable = initialPR.mergeable;

            while (mergeable === null && attempts < 5) {
              console.log(`‚è≥ Attempt ${attempts + 1}: Waiting for GitHub to calculate mergeability...`);
              await new Promise(resolve => setTimeout(resolve, 3000)); // wait 3 seconds

              const { data: updatedPR } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
              });

              mergeable = updatedPR.mergeable;
              attempts++;
            }

            if (mergeable === false) {
              console.log(`‚ùå PR #${pr.number} has merge conflicts. Closing...`);

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: "üö´ This pull request has merge conflicts and will be closed automatically. Please resolve the conflicts and open a new PR.",
              });

              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                state: 'closed',
              });

            } else if (mergeable === true) {
              console.log(`‚úÖ PR #${pr.number} is mergeable.`);
            } else {
              console.log(`‚ö†Ô∏è Could not determine mergeability for PR #${pr.number}.`);
            }
