# .github/workflows/close-conflicting-prs.yml

name: Close PRs with Merge Conflicts

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check_merge_conflicts:
    runs-on: ubuntu-latest

    steps:
      - name: Check if PR has merge conflicts
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;

            const getPRDetails = async () => {
              const { data: prDetails } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
              });
              return prDetails;
            };

            let prDetails = await getPRDetails();

            // Retry if mergeable state is null (GitHub still calculating)
            if (prDetails.mergeable === null) {
              console.log("Mergeable state is null. Retrying in 10 seconds...");
              await new Promise(resolve => setTimeout(resolve, 10000));
              prDetails = await getPRDetails();
            }

            if (prDetails.mergeable === false) {
              console.log(`PR #${pr.number} has merge conflicts. Labeling and closing...`);

              // Add label
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: ['merge-conflict'],
              });

              // Assign PR author
              await github.rest.issues.addAssignees({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                assignees: [pr.user.login],
              });

              // Comment on PR
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: "This pull request has merge conflicts and will be closed automatically. Please resolve the conflicts and open a new PR.",
              });

              // Close the PR
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                state: 'closed',
              });

            } else if (prDetails.mergeable === true) {
              console.log(`PR #${pr.number} is mergeable.`);
            } else {
              throw new Error("Unable to determine mergeable status after retry.");
            }
