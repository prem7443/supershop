name: Close PRs with Merge Conflicts

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check_merge_conflicts:
    runs-on: ubuntu-latest

    steps:
      - name: Check if PR has merge conflicts
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;

            console.log(`Checking PR #${pr.number}...`);

            let attempts = 0;
            let prDetails;

            // Retry up to 5 times with delay, because 'mergeable' may be null initially
            while (attempts < 5) {
              prDetails = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
              });

              if (prDetails.data.mergeable !== null) break;

              console.log("Mergeable state is null. Waiting...");
              await new Promise(resolve => setTimeout(resolve, 2000)); // wait 2s
              attempts++;
            }

            if (prDetails.data.mergeable === false) {
              console.log(`PR #${pr.number} has merge conflicts. Closing...`);

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: "üö´ This pull request has merge conflicts and will be closed automatically. Please resolve them and create a new PR.",
              });

              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                state: 'closed',
              });
            } else if (prDetails.data.mergeable === true) {
              console.log(`‚úÖ PR #${pr.number} is mergeable.`);
            } else {
              console.log(`‚ùì PR #${pr.number}: mergeable state is still unknown.`);
            }
